#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WorkStatistics")]
	public partial class WorkDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertFunction(Function instance);
    partial void UpdateFunction(Function instance);
    partial void DeleteFunction(Function instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertCheckWork(CheckWork instance);
    partial void UpdateCheckWork(CheckWork instance);
    partial void DeleteCheckWork(CheckWork instance);
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertWorkSite(WorkSite instance);
    partial void UpdateWorkSite(WorkSite instance);
    partial void DeleteWorkSite(WorkSite instance);
    partial void InsertPredictionWages(PredictionWages instance);
    partial void UpdatePredictionWages(PredictionWages instance);
    partial void DeletePredictionWages(PredictionWages instance);
    partial void InsertWorker(Worker instance);
    partial void UpdateWorker(Worker instance);
    partial void DeleteWorker(Worker instance);
    partial void InsertWorkersRelation(WorkersRelation instance);
    partial void UpdateWorkersRelation(WorkersRelation instance);
    partial void DeleteWorkersRelation(WorkersRelation instance);
    partial void InsertModifyAttendanceRecord(ModifyAttendanceRecord instance);
    partial void UpdateModifyAttendanceRecord(ModifyAttendanceRecord instance);
    partial void DeleteModifyAttendanceRecord(ModifyAttendanceRecord instance);
    #endregion
		
		public WorkDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WorkStatisticsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Function> Function
		{
			get
			{
				return this.GetTable<Function>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payment
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<CheckWork> CheckWork
		{
			get
			{
				return this.GetTable<CheckWork>();
			}
		}
		
		public System.Data.Linq.Table<Attendance> Attendance
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<WorkSite> WorkSite
		{
			get
			{
				return this.GetTable<WorkSite>();
			}
		}
		
		public System.Data.Linq.Table<PredictionWages> PredictionWages
		{
			get
			{
				return this.GetTable<PredictionWages>();
			}
		}
		
		public System.Data.Linq.Table<Worker> Worker
		{
			get
			{
				return this.GetTable<Worker>();
			}
		}
		
		public System.Data.Linq.Table<WorkersRelation> WorkersRelation
		{
			get
			{
				return this.GetTable<WorkersRelation>();
			}
		}
		
		public System.Data.Linq.Table<ModifyAttendanceRecord> ModifyAttendanceRecord
		{
			get
			{
				return this.GetTable<ModifyAttendanceRecord>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Function]")]
	public partial class Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FunctionID;
		
		private string _FunctionName;
		
		private string _ParentNode;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _UpdateDateTime;
		
		private string _UpdateDateUser;
		
		private System.Nullable<int> _LineN;
		
		private System.Nullable<int> _Show;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFunctionIDChanging(string value);
    partial void OnFunctionIDChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnParentNodeChanging(string value);
    partial void OnParentNodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateTimeChanged();
    partial void OnUpdateDateUserChanging(string value);
    partial void OnUpdateDateUserChanged();
    partial void OnLineNChanging(System.Nullable<int> value);
    partial void OnLineNChanged();
    partial void OnShowChanging(System.Nullable<int> value);
    partial void OnShowChanged();
    #endregion
		
		public Function()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FunctionID
		{
			get
			{
				return this._FunctionID;
			}
			set
			{
				if ((this._FunctionID != value))
				{
					this.OnFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._FunctionID = value;
					this.SendPropertyChanged("FunctionID");
					this.OnFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="VarChar(50)")]
		public string FunctionName
		{
			get
			{
				return this._FunctionName;
			}
			set
			{
				if ((this._FunctionName != value))
				{
					this.OnFunctionNameChanging(value);
					this.SendPropertyChanging();
					this._FunctionName = value;
					this.SendPropertyChanged("FunctionName");
					this.OnFunctionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentNode", DbType="VarChar(20)")]
		public string ParentNode
		{
			get
			{
				return this._ParentNode;
			}
			set
			{
				if ((this._ParentNode != value))
				{
					this.OnParentNodeChanging(value);
					this.SendPropertyChanging();
					this._ParentNode = value;
					this.SendPropertyChanged("ParentNode");
					this.OnParentNodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateUser", DbType="VarChar(20)")]
		public string UpdateDateUser
		{
			get
			{
				return this._UpdateDateUser;
			}
			set
			{
				if ((this._UpdateDateUser != value))
				{
					this.OnUpdateDateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateUser = value;
					this.SendPropertyChanged("UpdateDateUser");
					this.OnUpdateDateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineN", DbType="Int")]
		public System.Nullable<int> LineN
		{
			get
			{
				return this._LineN;
			}
			set
			{
				if ((this._LineN != value))
				{
					this.OnLineNChanging(value);
					this.SendPropertyChanging();
					this._LineN = value;
					this.SendPropertyChanged("LineN");
					this.OnLineNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Int")]
		public System.Nullable<int> Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private int _WorkSiteId;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Nullable<int> _LineN;
		
		private System.Nullable<int> _AdminCheck;
		
		private string _Remark;
		
		private EntityRef<WorkSite> _WorkSite;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnLineNChanging(System.Nullable<int> value);
    partial void OnLineNChanged();
    partial void OnAdminCheckChanging(System.Nullable<int> value);
    partial void OnAdminCheckChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public User()
		{
			this._WorkSite = default(EntityRef<WorkSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL")]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					if (this._WorkSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(20)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="Date")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineN", DbType="Int")]
		public System.Nullable<int> LineN
		{
			get
			{
				return this._LineN;
			}
			set
			{
				if ((this._LineN != value))
				{
					this.OnLineNChanging(value);
					this.SendPropertyChanging();
					this._LineN = value;
					this.SendPropertyChanged("LineN");
					this.OnLineNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminCheck", DbType="Int")]
		public System.Nullable<int> AdminCheck
		{
			get
			{
				return this._AdminCheck;
			}
			set
			{
				if ((this._AdminCheck != value))
				{
					this.OnAdminCheckChanging(value);
					this.SendPropertyChanging();
					this._AdminCheck = value;
					this.SendPropertyChanged("AdminCheck");
					this.OnAdminCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_User", Storage="_WorkSite", ThisKey="WorkSiteId", OtherKey="WorkSiteId", IsForeignKey=true)]
		public WorkSite WorkSite
		{
			get
			{
				return this._WorkSite.Entity;
			}
			set
			{
				WorkSite previousValue = this._WorkSite.Entity;
				if (((previousValue != value) 
							|| (this._WorkSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSite.Entity = null;
						previousValue.User.Remove(this);
					}
					this._WorkSite.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._WorkSiteId = value.WorkSiteId;
					}
					else
					{
						this._WorkSiteId = default(int);
					}
					this.SendPropertyChanged("WorkSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkSiteId;
		
		private string _WorkId;
		
		private System.Nullable<System.DateTime> _RecordTime;
		
		private System.Nullable<System.DateTime> _WagePaymentDate;
		
		private System.Nullable<int> _WageAmount;
		
		private string _WageCard;
		
		private string _PaymentType;
		
		private string _Company;
		
		private string _CompanyBoss;
		
		private string _Remark;
		
		private EntityRef<WorkSite> _WorkSite;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnRecordTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordTimeChanged();
    partial void OnWagePaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWagePaymentDateChanged();
    partial void OnWageAmountChanging(System.Nullable<int> value);
    partial void OnWageAmountChanged();
    partial void OnWageCardChanging(string value);
    partial void OnWageCardChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCompanyBossChanging(string value);
    partial void OnCompanyBossChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Payment()
		{
			this._WorkSite = default(EntityRef<WorkSite>);
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL")]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					if (this._WorkSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WagePaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> WagePaymentDate
		{
			get
			{
				return this._WagePaymentDate;
			}
			set
			{
				if ((this._WagePaymentDate != value))
				{
					this.OnWagePaymentDateChanging(value);
					this.SendPropertyChanging();
					this._WagePaymentDate = value;
					this.SendPropertyChanged("WagePaymentDate");
					this.OnWagePaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageAmount", DbType="Int")]
		public System.Nullable<int> WageAmount
		{
			get
			{
				return this._WageAmount;
			}
			set
			{
				if ((this._WageAmount != value))
				{
					this.OnWageAmountChanging(value);
					this.SendPropertyChanging();
					this._WageAmount = value;
					this.SendPropertyChanged("WageAmount");
					this.OnWageAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WageCard", DbType="VarChar(3)")]
		public string WageCard
		{
			get
			{
				return this._WageCard;
			}
			set
			{
				if ((this._WageCard != value))
				{
					this.OnWageCardChanging(value);
					this.SendPropertyChanging();
					this._WageCard = value;
					this.SendPropertyChanged("WageCard");
					this.OnWageCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(20)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyBoss", DbType="VarChar(20)")]
		public string CompanyBoss
		{
			get
			{
				return this._CompanyBoss;
			}
			set
			{
				if ((this._CompanyBoss != value))
				{
					this.OnCompanyBossChanging(value);
					this.SendPropertyChanging();
					this._CompanyBoss = value;
					this.SendPropertyChanged("CompanyBoss");
					this.OnCompanyBossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_Payment", Storage="_WorkSite", ThisKey="WorkSiteId", OtherKey="WorkSiteId", IsForeignKey=true)]
		public WorkSite WorkSite
		{
			get
			{
				return this._WorkSite.Entity;
			}
			set
			{
				WorkSite previousValue = this._WorkSite.Entity;
				if (((previousValue != value) 
							|| (this._WorkSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSite.Entity = null;
						previousValue.Payment.Remove(this);
					}
					this._WorkSite.Entity = value;
					if ((value != null))
					{
						value.Payment.Add(this);
						this._WorkSiteId = value.WorkSiteId;
					}
					else
					{
						this._WorkSiteId = default(int);
					}
					this.SendPropertyChanged("WorkSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Payment", Storage="_Worker", ThisKey="WorkId", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Payment.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Payment.Add(this);
						this._WorkId = value.WorkId;
					}
					else
					{
						this._WorkId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckWork")]
	public partial class CheckWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CheckDate;
		
		private System.DateTime _RecordTime;
		
		private string _WorkName;
		
		private string _WorkSiteName;
		
		private int _CheckResult;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnRecordTimeChanging(System.DateTime value);
    partial void OnRecordTimeChanged();
    partial void OnWorkNameChanging(string value);
    partial void OnWorkNameChanged();
    partial void OnWorkSiteNameChanging(string value);
    partial void OnWorkSiteNameChanged();
    partial void OnCheckResultChanging(int value);
    partial void OnCheckResultChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public CheckWork()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkName", DbType="VarChar(20)")]
		public string WorkName
		{
			get
			{
				return this._WorkName;
			}
			set
			{
				if ((this._WorkName != value))
				{
					this.OnWorkNameChanging(value);
					this.SendPropertyChanging();
					this._WorkName = value;
					this.SendPropertyChanged("WorkName");
					this.OnWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteName", DbType="VarChar(50)")]
		public string WorkSiteName
		{
			get
			{
				return this._WorkSiteName;
			}
			set
			{
				if ((this._WorkSiteName != value))
				{
					this.OnWorkSiteNameChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteName = value;
					this.SendPropertyChanged("WorkSiteName");
					this.OnWorkSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="Int NOT NULL")]
		public int CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this.OnCheckResultChanging(value);
					this.SendPropertyChanging();
					this._CheckResult = value;
					this.SendPropertyChanged("CheckResult");
					this.OnCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _RecordTime;
		
		private int _WorkSiteId;
		
		private string _WorkId;
		
		private System.Nullable<System.DateTimeOffset> _WorkDate;
		
		private System.Nullable<double> _WorkTime;
		
		private System.Nullable<double> _WorkMore;
		
		private string _WorkQuality;
		
		private string _Weather;
		
		private string _Remark;
		
		private EntityRef<WorkSite> _WorkSite;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRecordTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordTimeChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnWorkDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnWorkDateChanged();
    partial void OnWorkTimeChanging(System.Nullable<double> value);
    partial void OnWorkTimeChanged();
    partial void OnWorkMoreChanging(System.Nullable<double> value);
    partial void OnWorkMoreChanged();
    partial void OnWorkQualityChanging(string value);
    partial void OnWorkQualityChanged();
    partial void OnWeatherChanging(string value);
    partial void OnWeatherChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Attendance()
		{
			this._WorkSite = default(EntityRef<WorkSite>);
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL")]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					if (this._WorkSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDate", DbType="Date")]
		public System.Nullable<System.DateTimeOffset> WorkDate
		{
			get
			{
				return this._WorkDate;
			}
			set
			{
				if ((this._WorkDate != value))
				{
					this.OnWorkDateChanging(value);
					this.SendPropertyChanging();
					this._WorkDate = value;
					this.SendPropertyChanged("WorkDate");
					this.OnWorkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Float")]
		public System.Nullable<double> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkMore", DbType="Float")]
		public System.Nullable<double> WorkMore
		{
			get
			{
				return this._WorkMore;
			}
			set
			{
				if ((this._WorkMore != value))
				{
					this.OnWorkMoreChanging(value);
					this.SendPropertyChanging();
					this._WorkMore = value;
					this.SendPropertyChanged("WorkMore");
					this.OnWorkMoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQuality", DbType="VarChar(256)")]
		public string WorkQuality
		{
			get
			{
				return this._WorkQuality;
			}
			set
			{
				if ((this._WorkQuality != value))
				{
					this.OnWorkQualityChanging(value);
					this.SendPropertyChanging();
					this._WorkQuality = value;
					this.SendPropertyChanged("WorkQuality");
					this.OnWorkQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weather", DbType="VarChar(10)")]
		public string Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				if ((this._Weather != value))
				{
					this.OnWeatherChanging(value);
					this.SendPropertyChanging();
					this._Weather = value;
					this.SendPropertyChanged("Weather");
					this.OnWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_Attendance", Storage="_WorkSite", ThisKey="WorkSiteId", OtherKey="WorkSiteId", IsForeignKey=true)]
		public WorkSite WorkSite
		{
			get
			{
				return this._WorkSite.Entity;
			}
			set
			{
				WorkSite previousValue = this._WorkSite.Entity;
				if (((previousValue != value) 
							|| (this._WorkSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSite.Entity = null;
						previousValue.Attendance.Remove(this);
					}
					this._WorkSite.Entity = value;
					if ((value != null))
					{
						value.Attendance.Add(this);
						this._WorkSiteId = value.WorkSiteId;
					}
					else
					{
						this._WorkSiteId = default(int);
					}
					this.SendPropertyChanged("WorkSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Attendance", Storage="_Worker", ThisKey="WorkId", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.Attendance.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.Attendance.Add(this);
						this._WorkId = value.WorkId;
					}
					else
					{
						this._WorkId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkSite")]
	public partial class WorkSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Company;
		
		private string _CompanyBoss;
		
		private int _WorkSiteId;
		
		private string _WorkSiteName;
		
		private string _WorkManage;
		
		private System.Nullable<System.DateTime> _WorkSiteStart;
		
		private System.Nullable<System.DateTime> _WorkSiteEnd;
		
		private System.Nullable<int> _WorkSiteFinished;
		
		private string _Remark;
		
		private EntitySet<User> _User;
		
		private EntitySet<Payment> _Payment;
		
		private EntitySet<Attendance> _Attendance;
		
		private EntitySet<PredictionWages> _PredictionWages;
		
		private EntitySet<ModifyAttendanceRecord> _ModifyAttendanceRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCompanyBossChanging(string value);
    partial void OnCompanyBossChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnWorkSiteNameChanging(string value);
    partial void OnWorkSiteNameChanged();
    partial void OnWorkManageChanging(string value);
    partial void OnWorkManageChanged();
    partial void OnWorkSiteStartChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkSiteStartChanged();
    partial void OnWorkSiteEndChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkSiteEndChanged();
    partial void OnWorkSiteFinishedChanging(System.Nullable<int> value);
    partial void OnWorkSiteFinishedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public WorkSite()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			this._Payment = new EntitySet<Payment>(new Action<Payment>(this.attach_Payment), new Action<Payment>(this.detach_Payment));
			this._Attendance = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendance), new Action<Attendance>(this.detach_Attendance));
			this._PredictionWages = new EntitySet<PredictionWages>(new Action<PredictionWages>(this.attach_PredictionWages), new Action<PredictionWages>(this.detach_PredictionWages));
			this._ModifyAttendanceRecord = new EntitySet<ModifyAttendanceRecord>(new Action<ModifyAttendanceRecord>(this.attach_ModifyAttendanceRecord), new Action<ModifyAttendanceRecord>(this.detach_ModifyAttendanceRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyBoss", DbType="VarChar(20)")]
		public string CompanyBoss
		{
			get
			{
				return this._CompanyBoss;
			}
			set
			{
				if ((this._CompanyBoss != value))
				{
					this.OnCompanyBossChanging(value);
					this.SendPropertyChanging();
					this._CompanyBoss = value;
					this.SendPropertyChanged("CompanyBoss");
					this.OnCompanyBossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkSiteName
		{
			get
			{
				return this._WorkSiteName;
			}
			set
			{
				if ((this._WorkSiteName != value))
				{
					this.OnWorkSiteNameChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteName = value;
					this.SendPropertyChanged("WorkSiteName");
					this.OnWorkSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkManage", DbType="VarChar(20)")]
		public string WorkManage
		{
			get
			{
				return this._WorkManage;
			}
			set
			{
				if ((this._WorkManage != value))
				{
					this.OnWorkManageChanging(value);
					this.SendPropertyChanging();
					this._WorkManage = value;
					this.SendPropertyChanged("WorkManage");
					this.OnWorkManageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteStart", DbType="Date")]
		public System.Nullable<System.DateTime> WorkSiteStart
		{
			get
			{
				return this._WorkSiteStart;
			}
			set
			{
				if ((this._WorkSiteStart != value))
				{
					this.OnWorkSiteStartChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteStart = value;
					this.SendPropertyChanged("WorkSiteStart");
					this.OnWorkSiteStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteEnd", DbType="Date")]
		public System.Nullable<System.DateTime> WorkSiteEnd
		{
			get
			{
				return this._WorkSiteEnd;
			}
			set
			{
				if ((this._WorkSiteEnd != value))
				{
					this.OnWorkSiteEndChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteEnd = value;
					this.SendPropertyChanged("WorkSiteEnd");
					this.OnWorkSiteEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteFinished", DbType="Int")]
		public System.Nullable<int> WorkSiteFinished
		{
			get
			{
				return this._WorkSiteFinished;
			}
			set
			{
				if ((this._WorkSiteFinished != value))
				{
					this.OnWorkSiteFinishedChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteFinished = value;
					this.SendPropertyChanged("WorkSiteFinished");
					this.OnWorkSiteFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_User", Storage="_User", ThisKey="WorkSiteId", OtherKey="WorkSiteId")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_Payment", Storage="_Payment", ThisKey="WorkSiteId", OtherKey="WorkSiteId")]
		public EntitySet<Payment> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				this._Payment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_Attendance", Storage="_Attendance", ThisKey="WorkSiteId", OtherKey="WorkSiteId")]
		public EntitySet<Attendance> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				this._Attendance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_PredictionWages", Storage="_PredictionWages", ThisKey="WorkSiteId", OtherKey="WorkSiteId")]
		public EntitySet<PredictionWages> PredictionWages
		{
			get
			{
				return this._PredictionWages;
			}
			set
			{
				this._PredictionWages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_ModifyAttendanceRecord", Storage="_ModifyAttendanceRecord", ThisKey="WorkSiteId", OtherKey="WorkSiteId")]
		public EntitySet<ModifyAttendanceRecord> ModifyAttendanceRecord
		{
			get
			{
				return this._ModifyAttendanceRecord;
			}
			set
			{
				this._ModifyAttendanceRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = null;
		}
		
		private void attach_Payment(Payment entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = this;
		}
		
		private void detach_Payment(Payment entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = null;
		}
		
		private void attach_Attendance(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = this;
		}
		
		private void detach_Attendance(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = null;
		}
		
		private void attach_PredictionWages(PredictionWages entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = this;
		}
		
		private void detach_PredictionWages(PredictionWages entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = null;
		}
		
		private void attach_ModifyAttendanceRecord(ModifyAttendanceRecord entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = this;
		}
		
		private void detach_ModifyAttendanceRecord(ModifyAttendanceRecord entity)
		{
			this.SendPropertyChanging();
			entity.WorkSite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PredictionWages")]
	public partial class PredictionWages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WorkYear;
		
		private string _WorkMon;
		
		private string _WorkerId;
		
		private int _WorkSiteId;
		
		private System.Nullable<double> _WorkTimeMon;
		
		private System.Nullable<double> _WorkMoreMon;
		
		private System.Nullable<int> _WholePart;
		
		private System.Nullable<double> _PredictionTotalWages;
		
		private string _Remark;
		
		private EntityRef<WorkSite> _WorkSite;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkYearChanging(string value);
    partial void OnWorkYearChanged();
    partial void OnWorkMonChanging(string value);
    partial void OnWorkMonChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnWorkTimeMonChanging(System.Nullable<double> value);
    partial void OnWorkTimeMonChanged();
    partial void OnWorkMoreMonChanging(System.Nullable<double> value);
    partial void OnWorkMoreMonChanged();
    partial void OnWholePartChanging(System.Nullable<int> value);
    partial void OnWholePartChanged();
    partial void OnPredictionTotalWagesChanging(System.Nullable<double> value);
    partial void OnPredictionTotalWagesChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PredictionWages()
		{
			this._WorkSite = default(EntityRef<WorkSite>);
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkYear", DbType="VarChar(4)")]
		public string WorkYear
		{
			get
			{
				return this._WorkYear;
			}
			set
			{
				if ((this._WorkYear != value))
				{
					this.OnWorkYearChanging(value);
					this.SendPropertyChanging();
					this._WorkYear = value;
					this.SendPropertyChanged("WorkYear");
					this.OnWorkYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkMon", DbType="VarChar(2)")]
		public string WorkMon
		{
			get
			{
				return this._WorkMon;
			}
			set
			{
				if ((this._WorkMon != value))
				{
					this.OnWorkMonChanging(value);
					this.SendPropertyChanging();
					this._WorkMon = value;
					this.SendPropertyChanged("WorkMon");
					this.OnWorkMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerId", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL")]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					if (this._WorkSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTimeMon", DbType="Float")]
		public System.Nullable<double> WorkTimeMon
		{
			get
			{
				return this._WorkTimeMon;
			}
			set
			{
				if ((this._WorkTimeMon != value))
				{
					this.OnWorkTimeMonChanging(value);
					this.SendPropertyChanging();
					this._WorkTimeMon = value;
					this.SendPropertyChanged("WorkTimeMon");
					this.OnWorkTimeMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkMoreMon", DbType="Float")]
		public System.Nullable<double> WorkMoreMon
		{
			get
			{
				return this._WorkMoreMon;
			}
			set
			{
				if ((this._WorkMoreMon != value))
				{
					this.OnWorkMoreMonChanging(value);
					this.SendPropertyChanging();
					this._WorkMoreMon = value;
					this.SendPropertyChanged("WorkMoreMon");
					this.OnWorkMoreMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WholePart", DbType="Int")]
		public System.Nullable<int> WholePart
		{
			get
			{
				return this._WholePart;
			}
			set
			{
				if ((this._WholePart != value))
				{
					this.OnWholePartChanging(value);
					this.SendPropertyChanging();
					this._WholePart = value;
					this.SendPropertyChanged("WholePart");
					this.OnWholePartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredictionTotalWages", DbType="Float")]
		public System.Nullable<double> PredictionTotalWages
		{
			get
			{
				return this._PredictionTotalWages;
			}
			set
			{
				if ((this._PredictionTotalWages != value))
				{
					this.OnPredictionTotalWagesChanging(value);
					this.SendPropertyChanging();
					this._PredictionTotalWages = value;
					this.SendPropertyChanged("PredictionTotalWages");
					this.OnPredictionTotalWagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_PredictionWages", Storage="_WorkSite", ThisKey="WorkSiteId", OtherKey="WorkSiteId", IsForeignKey=true)]
		public WorkSite WorkSite
		{
			get
			{
				return this._WorkSite.Entity;
			}
			set
			{
				WorkSite previousValue = this._WorkSite.Entity;
				if (((previousValue != value) 
							|| (this._WorkSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSite.Entity = null;
						previousValue.PredictionWages.Remove(this);
					}
					this._WorkSite.Entity = value;
					if ((value != null))
					{
						value.PredictionWages.Add(this);
						this._WorkSiteId = value.WorkSiteId;
					}
					else
					{
						this._WorkSiteId = default(int);
					}
					this.SendPropertyChanged("WorkSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_PredictionWages", Storage="_Worker", ThisKey="WorkerId", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.PredictionWages.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.PredictionWages.Add(this);
						this._WorkerId = value.WorkId;
					}
					else
					{
						this._WorkerId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Worker")]
	public partial class Worker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkId;
		
		private string _WorkName;
		
		private System.Nullable<int> _Sex;
		
		private string _Phone;
		
		private string _WorkType;
		
		private string _WorkType1;
		
		private string _IC;
		
		private string _Affiliation;
		
		private string _CCBPayCard;
		
		private string _JSPayCard;
		
		private string _Address;
		
		private System.Nullable<int> _Visual;
		
		private System.Nullable<int> _AccidentInsurance;
		
		private System.Nullable<System.DateTime> _InsuranceDate;
		
		private string _Remark;
		
		private EntitySet<Payment> _Payment;
		
		private EntitySet<Attendance> _Attendance;
		
		private EntitySet<PredictionWages> _PredictionWages;
		
		private EntitySet<WorkersRelation> _WorkersRelation;
		
		private EntitySet<WorkersRelation> _WorkersRelation1;
		
		private EntitySet<ModifyAttendanceRecord> _ModifyAttendanceRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnWorkNameChanging(string value);
    partial void OnWorkNameChanged();
    partial void OnSexChanging(System.Nullable<int> value);
    partial void OnSexChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnWorkTypeChanging(string value);
    partial void OnWorkTypeChanged();
    partial void OnWorkType1Changing(string value);
    partial void OnWorkType1Changed();
    partial void OnICChanging(string value);
    partial void OnICChanged();
    partial void OnAffiliationChanging(string value);
    partial void OnAffiliationChanged();
    partial void OnCCBPayCardChanging(string value);
    partial void OnCCBPayCardChanged();
    partial void OnJSPayCardChanging(string value);
    partial void OnJSPayCardChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnVisualChanging(System.Nullable<int> value);
    partial void OnVisualChanged();
    partial void OnAccidentInsuranceChanging(System.Nullable<int> value);
    partial void OnAccidentInsuranceChanged();
    partial void OnInsuranceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsuranceDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Worker()
		{
			this._Payment = new EntitySet<Payment>(new Action<Payment>(this.attach_Payment), new Action<Payment>(this.detach_Payment));
			this._Attendance = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendance), new Action<Attendance>(this.detach_Attendance));
			this._PredictionWages = new EntitySet<PredictionWages>(new Action<PredictionWages>(this.attach_PredictionWages), new Action<PredictionWages>(this.detach_PredictionWages));
			this._WorkersRelation = new EntitySet<WorkersRelation>(new Action<WorkersRelation>(this.attach_WorkersRelation), new Action<WorkersRelation>(this.detach_WorkersRelation));
			this._WorkersRelation1 = new EntitySet<WorkersRelation>(new Action<WorkersRelation>(this.attach_WorkersRelation1), new Action<WorkersRelation>(this.detach_WorkersRelation1));
			this._ModifyAttendanceRecord = new EntitySet<ModifyAttendanceRecord>(new Action<ModifyAttendanceRecord>(this.attach_ModifyAttendanceRecord), new Action<ModifyAttendanceRecord>(this.detach_ModifyAttendanceRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="VarChar(18) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WorkName
		{
			get
			{
				return this._WorkName;
			}
			set
			{
				if ((this._WorkName != value))
				{
					this.OnWorkNameChanging(value);
					this.SendPropertyChanging();
					this._WorkName = value;
					this.SendPropertyChanged("WorkName");
					this.OnWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int")]
		public System.Nullable<int> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(11)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType", DbType="VarChar(20)")]
		public string WorkType
		{
			get
			{
				return this._WorkType;
			}
			set
			{
				if ((this._WorkType != value))
				{
					this.OnWorkTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkType = value;
					this.SendPropertyChanged("WorkType");
					this.OnWorkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType1", DbType="VarChar(20)")]
		public string WorkType1
		{
			get
			{
				return this._WorkType1;
			}
			set
			{
				if ((this._WorkType1 != value))
				{
					this.OnWorkType1Changing(value);
					this.SendPropertyChanging();
					this._WorkType1 = value;
					this.SendPropertyChanged("WorkType1");
					this.OnWorkType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IC", DbType="VarChar(18)")]
		public string IC
		{
			get
			{
				return this._IC;
			}
			set
			{
				if ((this._IC != value))
				{
					this.OnICChanging(value);
					this.SendPropertyChanging();
					this._IC = value;
					this.SendPropertyChanged("IC");
					this.OnICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliation", DbType="VarChar(20)")]
		public string Affiliation
		{
			get
			{
				return this._Affiliation;
			}
			set
			{
				if ((this._Affiliation != value))
				{
					this.OnAffiliationChanging(value);
					this.SendPropertyChanging();
					this._Affiliation = value;
					this.SendPropertyChanged("Affiliation");
					this.OnAffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCBPayCard", DbType="VarChar(20)")]
		public string CCBPayCard
		{
			get
			{
				return this._CCBPayCard;
			}
			set
			{
				if ((this._CCBPayCard != value))
				{
					this.OnCCBPayCardChanging(value);
					this.SendPropertyChanging();
					this._CCBPayCard = value;
					this.SendPropertyChanged("CCBPayCard");
					this.OnCCBPayCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSPayCard", DbType="VarChar(20)")]
		public string JSPayCard
		{
			get
			{
				return this._JSPayCard;
			}
			set
			{
				if ((this._JSPayCard != value))
				{
					this.OnJSPayCardChanging(value);
					this.SendPropertyChanging();
					this._JSPayCard = value;
					this.SendPropertyChanged("JSPayCard");
					this.OnJSPayCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(128)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visual", DbType="Int")]
		public System.Nullable<int> Visual
		{
			get
			{
				return this._Visual;
			}
			set
			{
				if ((this._Visual != value))
				{
					this.OnVisualChanging(value);
					this.SendPropertyChanging();
					this._Visual = value;
					this.SendPropertyChanged("Visual");
					this.OnVisualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentInsurance", DbType="Int")]
		public System.Nullable<int> AccidentInsurance
		{
			get
			{
				return this._AccidentInsurance;
			}
			set
			{
				if ((this._AccidentInsurance != value))
				{
					this.OnAccidentInsuranceChanging(value);
					this.SendPropertyChanging();
					this._AccidentInsurance = value;
					this.SendPropertyChanged("AccidentInsurance");
					this.OnAccidentInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InsuranceDate
		{
			get
			{
				return this._InsuranceDate;
			}
			set
			{
				if ((this._InsuranceDate != value))
				{
					this.OnInsuranceDateChanging(value);
					this.SendPropertyChanging();
					this._InsuranceDate = value;
					this.SendPropertyChanged("InsuranceDate");
					this.OnInsuranceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(128)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Payment", Storage="_Payment", ThisKey="WorkId", OtherKey="WorkId")]
		public EntitySet<Payment> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				this._Payment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_Attendance", Storage="_Attendance", ThisKey="WorkId", OtherKey="WorkId")]
		public EntitySet<Attendance> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				this._Attendance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_PredictionWages", Storage="_PredictionWages", ThisKey="WorkId", OtherKey="WorkerId")]
		public EntitySet<PredictionWages> PredictionWages
		{
			get
			{
				return this._PredictionWages;
			}
			set
			{
				this._PredictionWages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkersRelation", Storage="_WorkersRelation", ThisKey="WorkId", OtherKey="WorkId")]
		public EntitySet<WorkersRelation> WorkersRelation
		{
			get
			{
				return this._WorkersRelation;
			}
			set
			{
				this._WorkersRelation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkersRelation1", Storage="_WorkersRelation1", ThisKey="WorkId", OtherKey="WorkIdMain")]
		public EntitySet<WorkersRelation> WorkersRelation1
		{
			get
			{
				return this._WorkersRelation1;
			}
			set
			{
				this._WorkersRelation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_ModifyAttendanceRecord", Storage="_ModifyAttendanceRecord", ThisKey="WorkId", OtherKey="WorkId")]
		public EntitySet<ModifyAttendanceRecord> ModifyAttendanceRecord
		{
			get
			{
				return this._ModifyAttendanceRecord;
			}
			set
			{
				this._ModifyAttendanceRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payment(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_Payment(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
		
		private void attach_Attendance(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_Attendance(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
		
		private void attach_PredictionWages(PredictionWages entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_PredictionWages(PredictionWages entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
		
		private void attach_WorkersRelation(WorkersRelation entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_WorkersRelation(WorkersRelation entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
		
		private void attach_WorkersRelation1(WorkersRelation entity)
		{
			this.SendPropertyChanging();
			entity.Worker1 = this;
		}
		
		private void detach_WorkersRelation1(WorkersRelation entity)
		{
			this.SendPropertyChanging();
			entity.Worker1 = null;
		}
		
		private void attach_ModifyAttendanceRecord(ModifyAttendanceRecord entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_ModifyAttendanceRecord(ModifyAttendanceRecord entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkersRelation")]
	public partial class WorkersRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WorkIdMain;
		
		private string _WorkId;
		
		private string _Relation;
		
		private System.Nullable<bool> _Effect;
		
		private EntityRef<Worker> _Worker;
		
		private EntityRef<Worker> _Worker1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkIdMainChanging(string value);
    partial void OnWorkIdMainChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnEffectChanging(System.Nullable<bool> value);
    partial void OnEffectChanged();
    #endregion
		
		public WorkersRelation()
		{
			this._Worker = default(EntityRef<Worker>);
			this._Worker1 = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkIdMain", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkIdMain
		{
			get
			{
				return this._WorkIdMain;
			}
			set
			{
				if ((this._WorkIdMain != value))
				{
					if (this._Worker1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdMainChanging(value);
					this.SendPropertyChanging();
					this._WorkIdMain = value;
					this.SendPropertyChanged("WorkIdMain");
					this.OnWorkIdMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="VarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Effect", DbType="Bit")]
		public System.Nullable<bool> Effect
		{
			get
			{
				return this._Effect;
			}
			set
			{
				if ((this._Effect != value))
				{
					this.OnEffectChanging(value);
					this.SendPropertyChanging();
					this._Effect = value;
					this.SendPropertyChanged("Effect");
					this.OnEffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkersRelation", Storage="_Worker", ThisKey="WorkId", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.WorkersRelation.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.WorkersRelation.Add(this);
						this._WorkId = value.WorkId;
					}
					else
					{
						this._WorkId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkersRelation1", Storage="_Worker1", ThisKey="WorkIdMain", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker1
		{
			get
			{
				return this._Worker1.Entity;
			}
			set
			{
				Worker previousValue = this._Worker1.Entity;
				if (((previousValue != value) 
							|| (this._Worker1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker1.Entity = null;
						previousValue.WorkersRelation1.Remove(this);
					}
					this._Worker1.Entity = value;
					if ((value != null))
					{
						value.WorkersRelation1.Add(this);
						this._WorkIdMain = value.WorkId;
					}
					else
					{
						this._WorkIdMain = default(string);
					}
					this.SendPropertyChanged("Worker1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModifyAttendanceRecord")]
	public partial class ModifyAttendanceRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ModifyType;
		
		private System.Nullable<System.DateTime> _ModifyTime;
		
		private string _WorkId;
		
		private int _WorkSiteId;
		
		private System.Nullable<System.DateTime> _WorkDate;
		
		private System.Nullable<double> _WorkTime;
		
		private System.Nullable<double> _WorkMore;
		
		private string _WorkQuality;
		
		private EntityRef<Worker> _Worker;
		
		private EntityRef<WorkSite> _WorkSite;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnModifyTypeChanging(string value);
    partial void OnModifyTypeChanged();
    partial void OnModifyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyTimeChanged();
    partial void OnWorkIdChanging(string value);
    partial void OnWorkIdChanged();
    partial void OnWorkSiteIdChanging(int value);
    partial void OnWorkSiteIdChanged();
    partial void OnWorkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkDateChanged();
    partial void OnWorkTimeChanging(System.Nullable<double> value);
    partial void OnWorkTimeChanged();
    partial void OnWorkMoreChanging(System.Nullable<double> value);
    partial void OnWorkMoreChanged();
    partial void OnWorkQualityChanging(string value);
    partial void OnWorkQualityChanged();
    #endregion
		
		public ModifyAttendanceRecord()
		{
			this._Worker = default(EntityRef<Worker>);
			this._WorkSite = default(EntityRef<WorkSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyType", DbType="VarChar(10)")]
		public string ModifyType
		{
			get
			{
				return this._ModifyType;
			}
			set
			{
				if ((this._ModifyType != value))
				{
					this.OnModifyTypeChanging(value);
					this.SendPropertyChanging();
					this._ModifyType = value;
					this.SendPropertyChanged("ModifyType");
					this.OnModifyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyTime
		{
			get
			{
				return this._ModifyTime;
			}
			set
			{
				if ((this._ModifyTime != value))
				{
					this.OnModifyTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifyTime = value;
					this.SendPropertyChanged("ModifyTime");
					this.OnModifyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkId", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string WorkId
		{
			get
			{
				return this._WorkId;
			}
			set
			{
				if ((this._WorkId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIdChanging(value);
					this.SendPropertyChanging();
					this._WorkId = value;
					this.SendPropertyChanged("WorkId");
					this.OnWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkSiteId", DbType="Int NOT NULL")]
		public int WorkSiteId
		{
			get
			{
				return this._WorkSiteId;
			}
			set
			{
				if ((this._WorkSiteId != value))
				{
					if (this._WorkSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkSiteIdChanging(value);
					this.SendPropertyChanging();
					this._WorkSiteId = value;
					this.SendPropertyChanged("WorkSiteId");
					this.OnWorkSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDate", DbType="Date")]
		public System.Nullable<System.DateTime> WorkDate
		{
			get
			{
				return this._WorkDate;
			}
			set
			{
				if ((this._WorkDate != value))
				{
					this.OnWorkDateChanging(value);
					this.SendPropertyChanging();
					this._WorkDate = value;
					this.SendPropertyChanged("WorkDate");
					this.OnWorkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Float")]
		public System.Nullable<double> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkMore", DbType="Float")]
		public System.Nullable<double> WorkMore
		{
			get
			{
				return this._WorkMore;
			}
			set
			{
				if ((this._WorkMore != value))
				{
					this.OnWorkMoreChanging(value);
					this.SendPropertyChanging();
					this._WorkMore = value;
					this.SendPropertyChanged("WorkMore");
					this.OnWorkMoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQuality", DbType="VarChar(MAX)")]
		public string WorkQuality
		{
			get
			{
				return this._WorkQuality;
			}
			set
			{
				if ((this._WorkQuality != value))
				{
					this.OnWorkQualityChanging(value);
					this.SendPropertyChanging();
					this._WorkQuality = value;
					this.SendPropertyChanged("WorkQuality");
					this.OnWorkQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_ModifyAttendanceRecord", Storage="_Worker", ThisKey="WorkId", OtherKey="WorkId", IsForeignKey=true)]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.ModifyAttendanceRecord.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.ModifyAttendanceRecord.Add(this);
						this._WorkId = value.WorkId;
					}
					else
					{
						this._WorkId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkSite_ModifyAttendanceRecord", Storage="_WorkSite", ThisKey="WorkSiteId", OtherKey="WorkSiteId", IsForeignKey=true)]
		public WorkSite WorkSite
		{
			get
			{
				return this._WorkSite.Entity;
			}
			set
			{
				WorkSite previousValue = this._WorkSite.Entity;
				if (((previousValue != value) 
							|| (this._WorkSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkSite.Entity = null;
						previousValue.ModifyAttendanceRecord.Remove(this);
					}
					this._WorkSite.Entity = value;
					if ((value != null))
					{
						value.ModifyAttendanceRecord.Add(this);
						this._WorkSiteId = value.WorkSiteId;
					}
					else
					{
						this._WorkSiteId = default(int);
					}
					this.SendPropertyChanged("WorkSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
